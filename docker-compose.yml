version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: webrtc-hls-postgres
    environment:
      POSTGRES_DB: webrtc_hls
      POSTGRES_USER: webrtc_user
      POSTGRES_PASSWORD: webrtc_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - webrtc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U webrtc_user -d webrtc_hls"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: webrtc-hls-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - webrtc-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main application (Client + Server)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL:-http://localhost:3001}
        NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:3001}
        NEXT_PUBLIC_HLS_BASE_URL: ${NEXT_PUBLIC_HLS_BASE_URL:-http://localhost:3001/hls}
        NEXT_PUBLIC_ICE_SERVERS: ${NEXT_PUBLIC_ICE_SERVERS:-[{"urls":"stun:stun.l.google.com:19302"}]}
    container_name: webrtc-hls-app
    environment:
      # Database
      DATABASE_URL: "postgresql://webrtc_user:webrtc_password@postgres:5432/webrtc_hls"
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: webrtc_user
      DB_PASSWORD: webrtc_password
      DB_NAME: webrtc_hls
      # Redis
      REDIS_URL: "redis://redis:6379"
      # Server configuration
      PORT: 3002  # Internal Express server port
      NODE_ENV: production
      # Mediasoup configuration
      MEDIASOUP_LISTEN_IP: "0.0.0.0"
      MEDIASOUP_ANNOUNCED_IP: ${MEDIASOUP_ANNOUNCED_IP:-127.0.0.1}  # Change to your server's public IP in production
      MEDIASOUP_MIN_PORT: 40000
      MEDIASOUP_MAX_PORT: 49999
      # HLS configuration
      HLS_STORAGE_PATH: "/app/server/storage/hls"
      HLS_SEGMENT_DURATION: 4
      HLS_PLAYLIST_SIZE: 5
      FFMPEG_PATH: "/usr/bin/ffmpeg"
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3001}
      # Client configuration - served through the Express server
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL:-http://localhost:3001}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:3001}
      NEXT_PUBLIC_HLS_BASE_URL: ${NEXT_PUBLIC_HLS_BASE_URL:-http://localhost:3001/hls}
    ports:
      - "3001:3001"  # Single port for both client and server
      - "40000-49999:40000-49999/udp"  # Mediasoup RTC ports
    volumes:
      - hls_data:/app/server/storage/hls
      - logs_data:/app/server/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - webrtc-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  hls_data:
    driver: local
  logs_data:
    driver: local

networks:
  webrtc-network:
    driver: bridge
