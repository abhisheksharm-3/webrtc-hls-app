# Database Configuration
DATABASE_URL="postgresql://webrtc_user:webrtc_password@localhost:5432/webrtc_hls"

# Redis Configuration (Optional)
REDIS_URL="redis://localhost:6379"

# Server Configuration
PORT=3001
NODE_ENV=development

# Mediasoup Configuration
# IMPORTANT: For local development, use 127.0.0.1 for both listen and announced IP
# For production or Docker, use 0.0.0.0 for listen IP and your server's public IP for announced IP
MEDIASOUP_LISTEN_IP=127.0.0.1
MEDIASOUP_ANNOUNCED_IP=127.0.0.1

# Port range for WebRTC media traffic
MEDIASOUP_MIN_PORT=40000
MEDIASOUP_MAX_PORT=49999

# Force TCP transport (useful for Windows development where UDP might be blocked)
# Uncomment the line below to force TCP transport
# MEDIASOUP_FORCE_TCP=true

# HLS Configuration
HLS_STORAGE_PATH=./storage/hls
FFMPEG_PATH=/usr/bin/ffmpeg

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Client Configuration (for Next.js build)
NEXT_PUBLIC_SERVER_URL=http://localhost:3001
NEXT_PUBLIC_WS_URL=ws://localhost:3001
NEXT_PUBLIC_HLS_BASE_URL=http://localhost:3001/hls

# ICE Servers Configuration (JSON format)
# For development, STUN servers are usually sufficient
# For production behind NAT, you may need TURN servers
NEXT_PUBLIC_ICE_SERVERS=[{"urls":"stun:stun.l.google.com:19302"},{"urls":"stun:stun1.l.google.com:19302"},{"urls":["turn:openrelay.metered.ca:80","turn:openrelay.metered.ca:443"],"username":"openrelayproject","credential":"openrelayproject"}]
